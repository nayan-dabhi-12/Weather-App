body {
    background: linear-gradient(180deg, rgba(135,206,250,1) 0%, rgba(70,130,180,1) 100%);
    background-size: cover;
    font-family: Arial, sans-serif;
    height: 100vh;
    overflow: hidden;
    position: relative;
}

h1 {
    color: white;
    text-shadow: 2px 2px 4px #000000;
}

.search-container {
    position: relative;
    width: 400px;
    margin: 0 auto;
}

input.form-control {
    height: 50px;
    font-size: 18px;
    border-radius: 25px;
    padding: 0 20px;
}

button.btn {
    border-radius: 25px;
    width: 150px;
    height: 50px;
    font-size: 18px;
}

#weather-info {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

#weather-info .weather-part {
    background: rgba(0, 0, 0, 0.5); /* Darker background with some transparency */
    border-radius: 15px;
    margin: 20px;
    padding: 20px;
    color: white;
    width: 300px; /* Adjusted width */
    height: auto; /* Allows height to adjust based on content */
    max-height: 350px; /* Optional: set a max height if needed */
    overflow: auto; /* Adds scroll if content exceeds max height */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition: transform 0.5s ease, background 0.5s ease, box-shadow 0.5s ease;
    animation: fadeIn 1s ease;
}

#weather-info .weather-part:hover {
    transform: scale(1.1) rotate(5deg); /* Scale and rotate */
    background: rgba(0, 0, 0, 0.7); /* Darker background on hover */
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.5);
}

.weather-icon {
    font-size: 50px;
}

@keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

.weather-symbol {
    position: absolute;
    animation: disappear 3s forwards;
}

/* Add hover animation */
@keyframes hoverEffect {
    0% {
        transform: scale(1);
        box-shadow: none;
    }
    100% {
        transform: scale(1.1) rotate(5deg);
        box-shadow: 0px 0px 15px rgba(255, 255, 255, 0.7);
    }
}

/* Additional animation */
.weather-part:hover {
    animation: hoverEffect 0.5s forwards;
}
